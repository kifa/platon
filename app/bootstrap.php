<?php

use Nette\Application\Routers\RouteList,
    Nette\Application\Routers\Route,    
    Nette\Utils\Strings;

// Load Nette Framework or autoloader generated by Composer
require __DIR__ . '/../libs/autoload.php';


$configurator = new Nette\Config\Configurator;

// Enable Nette Debugger for error visualisation & logging
//$configurator->setDebugMode(TRUE);
$configurator->enableDebugger(__DIR__ . '/../log');

// Enable RobotLoader - this will load all classes automatically
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->register();

//Bootstrap forms
Kdyby\BootstrapFormRenderer\DI\RendererExtension::register($configurator);

//Replicator
Kdyby\Replicator\Container::register();

// Translation setup
$configurator->onCompile[] = function ($configurator, $compiler) {
    $compiler->addExtension('netteTranslator', new NetteTranslator\NetteTranslatorExtension);
};

// Create Dependency Injection container from config.neon file
$configurator->addConfig(__DIR__ . '/config/config.neon');
$configurator->addConfig(__DIR__ . '/config/config.local.neon', $configurator::NONE); // none section


$container = $configurator->createContainer();

$router = new RouteList;

Route::addStyle('slug');
Route::setStyleProperty('slug', Route::FILTER_OUT, function($url) {
    return Strings::webalize($url);
});

Route::setStyleProperty('slug', Route::FILTER_IN, function($url) {
    return Strings::webalize($url);
});

$router[] = new Route('<catID>-<slug>/<lang>', 'Product:products');

$router[] = new Route('koupit/<id>-<slug>/<lang>', 'Product:product');
$router[] = new Route('novinky/<id>-<slug>/<lang>', 'Blog:posts');
$router[] = new Route('novinky/clanek/<postid>-<slug>/<lang>', 'Blog:post');
$router[] = new Route('kosik/', 'Order:cart');
$router[] = new Route('kosik/', 'Order:cartEmpty');
$router[] = new Route('objednavka-dokoncena/<orderNO>/<lang>', 'Order:cartDone');
$router[] = new Route('objednavka/<lang>', 'Order:default');
$router[] = new Route('prihlaseni/', 'Sign:in');
$router[] = new Route('informace/<postid>-<slug>/<lang>', 'Blog:staticText');
$router[] = new Route('<presenter>/<action>[/<id>]/<lang>', 'SmartPanel:default');
$router[] = new Route('<presenter>/<action>[/<id>]', 'Homepage:default');

$container->addService('router', $router);

       

return $container;
